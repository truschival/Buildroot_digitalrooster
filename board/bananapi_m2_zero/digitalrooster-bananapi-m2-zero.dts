/*
 * DigitalRooster on Banana Pi M2 Zero specific Device tree including
 *  - Rotary Enconder (volume)
 *  - 2.8" PiTFT Display (SPI Display Ilitek + I2C Touch Focaltech)
 *  - Adafruit Speakerbonnet (I2S Sound)
 *
 * Copyright (c) 2019 Thomas Ruschival <thomas@ruschival.de> based on
 * the original device tree sun8i-h2-plus-bananapi-m2-zero.dts
 * Copyright (C) 2017 Icenowy Zheng <icenowy@aosc.io>
 *
 * Based on sun8i-h3-bananapi-m2-plus.dts, which is:
 *   Copyright (C) 2016 Chen-Yu Tsai <wens@csie.org>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "sun8i-h3.dtsi"
#include "sunxi-common-regulators.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	model = "DigitalRooster @ BananaPi-M2-Zero";
	compatible = "digitalrooster",
		     "sinovoip,bpi-m2-zero",
		     "allwinner,sun8i-h2-plus";

	aliases {
		serial0 = &uart0;
		serial1 = &uart1;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";

		pwr_led {
			label = "bananapi-m2-zero:red:pwr";
			gpios = <&r_pio 0 10 GPIO_ACTIVE_HIGH>; /* PL10 */
			default-state = "on";
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";

		sw4 {
			label = "power";
			linux,code = <BTN_0>;
			gpios = <&r_pio 0 3 GPIO_ACTIVE_LOW>;
		};
		/* rotary push button event interface */
		OnOff {
			label = "OnOff";
			linux,code = <102>; /* KEY_HOME */
			/* PA3 */
			gpios = <&pio 0 3  GPIO_ACTIVE_LOW>;
		};
	};

	reg_sy8113b: gpio-regulator {
		compatible = "regulator-gpio";
		regulator-name = "vdd-cpux";
		regulator-type = "voltage";
		regulator-boot-on;
		regulator-always-on;
		regulator-min-microvolt = <1100000>;
		regulator-max-microvolt = <1300000>;
		regulator-ramp-delay = <50>; /* 4ms */

		gpios = <&r_pio 0 1 GPIO_ACTIVE_HIGH>; /* PL1 */
		enable-active-high;
		gpios-states = <0x1>;
		states = <1100000 0x0
			  1300000 0x1>;
	};

	wifi_pwrseq: wifi_pwrseq {
		compatible = "mmc-pwrseq-simple";
		pinctrl-names = "default";
		reset-gpios = <&r_pio 0 7 GPIO_ACTIVE_LOW>; /* PL7 */
	};

	/* Gray rotary encoder e.g. Grayhill 61C1 in relative mode */
	rotary: rotary@0 {
		compatible = "rotary-encoder";
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&rotary_pins>;
		gpios = <&pio 0 0 GPIO_ACTIVE_HIGH>, /* PA0 */
			<&pio 0 1 GPIO_ACTIVE_HIGH>; /* PA1 */
		linux,axis = <0>;
		rotary-encoder,relative-axis;
		rotary-encoder,encoding = "gray";
		rotary-encoder,steps = <32>;
		rotary-encoder,steps-per-period = <1>;
	};

	/* MAX98357A Codec */
	max98357a: max98357a0 {
 		#sound-dai-cells = <0>;
 		compatible = "maxim,max98357a";
 		status = "okay";
	};

	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "digitalrooster-audio";
		simple-audio-card,format = "i2s";
		/* simple-audio-card,bitclock-master = <&dai>; */
		/* simple-audio-card,frame-master = <&dai_cpu>; */
		simple-audio-card,mclk-fs  = <256>;
		status = "okay";

		dai_cpu: simple-audio-card,cpu {
			sound-dai = <&i2s0>;
		};

		dai_codec: simple-audio-card,codec {
			sound-dai = <&max98357a>;
		};
	};
};

&mmc0 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_pins>;
	vmmc-supply = <&reg_vcc3v3>;
	bus-width = <4>;
	/*
	 * In different revisions the board have different card detect
	 * configuration.
	 */
	broken-cd;
	status = "okay";
};

&mmc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;
	vmmc-supply = <&reg_vcc3v3>;
	vqmmc-supply = <&reg_vcc3v3>;
	mmc-pwrseq = <&wifi_pwrseq>;
	bus-width = <4>;
	non-removable;
	status = "okay";

	brcmf: wifi@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
		interrupt-parent = <&pio>;
		interrupts = <6 10 IRQ_TYPE_LEVEL_LOW>; /* PG10 / EINT10 */
		interrupt-names = "host-wake";
	};
};

/* enable i2s controller */
&i2s0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2s0_pins>;
};
/* disable on-chip RTC */
&rtc {
	status = "disabled";
};

&ehci0 {
	status = "okay";
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pa_pins>;
	status = "okay";
};

&usbphy {
	usb0_id_det-gpios = <&r_pio 0 6 GPIO_ACTIVE_HIGH>; /* PL6 */
	/* USB OTG VBUS is directly connected to 5V without any regulators */
	status = "okay";
};

&pio {
	/* PA0, PA1 (rotary A,B), PA3 (push button) for rotary encoder*/
	push_button {
		status = "ok";
		label = "push_button";
		allwinner,pins = "PA3";
		allwinner,function = "gpio_in";
		line-name = "push_button";
	};
	rotary_pins: rotary_pins {
		allwinner,pins  = "PA0", "PA1";
		allwinner,function = "gpio_in";
		allwinner,pull = <0>;
	};

	/* I2S interface for codec */
	i2s0_pins:  i2s0-pins {
		pins =
		"PA18",  /*I2S_LRCLK */
		"PA19",  /*I2S_BCLCK */
		"PA20";  /*I2S_DOUT  */
		/* "PA21" not used - we don't have audio input */
		allwinner,function = "i2s0";

	};

	/* PiTFT GPIO pins */
        pitft_pins: pitft_pins {
		/* IRQ pin (PC4, Pin18 + PA15, Pin16) + DC pin (PA2, Pin22)*/
		label = "pitft";
		allwinner,pins  = "PC4", "PA15", "PA2";
		allwinner,function = "gpio_in", "gpio_in", "gpio_out";
		/* pullup none */
		allwinner,pull =  <
		2 /*PC4 pull-up */
		2 /*PA15 pull-up*/
		0 /*PA2  none */ >;
        };
};

/* Display @ SPI0 */
&spi0 {
	status = "okay";

	/* TINY DRM on Adafruit 2.8" TFT */
        pitft: pitft@0{
		compatible ="adafruit,yx240qv29", "ilitek,ili9341";
		status = "okay";
		/* common for tinydrm and framebuffer */
                reg = <0>;
                spi-max-frequency = <32000000>;
	        rotation = <90>; /* Rotation for tinydrm driver */
		/* backlight = <&pwm_18_backlight>     /* backlight tinydrm driver */
                /* GPIO assignments for tinydrm driver */
                dc-gpios = <&pio 0 2 GPIO_ACTIVE_HIGH>;     /* PA2,   */
                reset-gpios = <&pio 2 7  GPIO_ACTIVE_HIGH>; /* PC7, line 71 */
                /* Properties of Framebuffer driver */
		/* rotate = <270>; */
		/* fps = <25>; */
		/* bgr; */
		/* buswidth = <8>; */
		/* debug = <1>; */
		/* pinctrl-0 = <&pitft_pins>; */
        };
};

&i2c0 {
	status = "okay";

	/* I2C Touch controller */
	ft6236: ft6236@38 {
                compatible = "focaltech,ft6236";
                reg = <0x38>;
                interrupt-parent = <&pio>;
		/*
		 * use PA15 as IRQ - PC4 (Pin18) doesn't have IRQ capability
		 * --> Bridge Pin18 (PC4) to Pin16 (PA15) externally
		 */
                interrupts = <0 15 IRQ_TYPE_EDGE_FALLING>;
                touchscreen-size-x = <240>;
                touchscreen-size-y = <320>;
        };

	/* IO-Expander - MAX7315AUE uses driver PCA953x */
	ioexp: max7315@21 {
                #gpio-cells = <2>;
                compatible = "maxim,max7315";
                reg = <0x21>; /* address determined by solder jumpers */
                gpio-controller;
		gpio-line-names =
			"red","green","blue","bl_pwm",
			"nc","nc","nc","nc";
        };

	/* Real time clock */
	bq32k: rtc@68 {
		compatible = "ti,bq32000";
		reg = <0x68>;
		trickle-resistor-ohms = <1120>;
		/* trickle-diode-disable; */
	};
};
